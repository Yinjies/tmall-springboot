#database 分别是数据库访问地址，账号密码，驱动以及表结构自动生成策略(none)。
spring.datasource.url=jdbc:mysql://114.215.136.37:3306/tmall_springboot?characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.hibernate.ddl-auto = none
server.port=9090
#thymeleaf LEGACYHTML5表示经典html5模式，即允许非严格的html出现，元素少点什么也可以编译通过， 这个比较符合大家的编写习惯，太过严格的html，写起来累
#cache=false 表示不要缓存，以免在开发过程中因为停留在缓存而给开发人员带来困扰。
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.cache=false

#context 上下文地址为 tmall_springboot, 所以访问的时候，都要加上这个，比如：
server.context-path=/tmall_springboot

#设置上传文件大小，默认只有1 m
spring.http.multipart.maxFileSize=100Mb
spring.http.multipart.maxRequestSize=100Mb

#jpa对实体类的默认字段会把驼峰命名的属性，转换为字段名的时候自动加上下划线。 这个配置的作用就是去掉下划线
#比如属性名称是 createDate, jpa 默认转换为字段名 create_Date。 有了这个配置之后，就会转换为同名字段 createDate
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#显示 hibernate运行的 sql 语句
spring.jpa.show-sql=true

#静态资源为什么不放在 static 目录下？ 一般说来，在约定里，springboot 的静态资源会在 static 目录下，
# 但是我们是放在 webapp 目录下，为什么会这样呢？ 因为我们还要做上传图片的功能，如果是放在 static 下，
# 上传后的图片就无法被访问，还是放在 webapp 下，上传后，能够立即被访问。
#Redis数据库索引（默认为0）
spring.redis.database=0
#Redis服务器地址
spring.redis.host=127.0.0.1
#Redis服务器连接端口
spring.redis.port=6379
#Redis服务器连接密码（默认为空）
spring.redis.password=
#连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=10
#连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
#连接池中的最大空闲连接
spring.redis.pool.max-idle=8
#连接池中的最小空闲连接
spring.redis.pool.min-idle=0
#连接超时时间（毫秒）
spring.redis.timeout=0

ElasticSearch
spring.data.elasticsearch.cluster-nodes = 127.0.0.1:9300